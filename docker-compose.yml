version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: pv-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pv-network

  backend:
    build: ./backend
    container_name: pv-backend
    ports:
      - "5000:5000"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=user
      - RABBITMQ_PASS=password
      - FLASK_ENV=production
    volumes:
      - backend_data:/app/data
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/status"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pv-network
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: pv-frontend
    ports:
      - "4200:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pv-network
    restart: unless-stopped

volumes:
  rabbitmq_data:
  backend_data:

networks:
  pv-network:
    driver: bridge
